defmodule AdventOfCode.ProblemSolver do
  def solve_day(1) do
    day_input = [
      109_024,
      137_172,
      80445,
      80044,
      107_913,
      108_989,
      59638,
      120_780,
      139_262,
      139_395,
      56534,
      129_398,
      101_732,
      101_212,
      142_352,
      123_971,
      75207,
      121_384,
      145_719,
      66925,
      71782,
      102_129,
      83220,
      147_045,
      99092,
      132_909,
      114_504,
      141_549,
      99552,
      128_422,
      134_505,
      58295,
      142_325,
      107_896,
      66181,
      86080,
      71393,
      58839,
      143_851,
      149_540,
      108_206,
      68353,
      123_196,
      61256,
      83896,
      122_756,
      133_066,
      138_085,
      129_872,
      63965,
      105_520,
      141_513,
      90305,
      92651,
      113_284,
      66895,
      72068,
      144_011,
      82963,
      136_919,
      111_222,
      54134,
      82662,
      107_612,
      87366,
      131_791,
      144_708,
      116_894,
      142_784,
      52299,
      138_414,
      56330,
      80146,
      73422,
      60308,
      125_678,
      95910,
      116_374,
      136_257,
      100_387,
      114_960,
      62651,
      102_946,
      56912,
      91399,
      146_005,
      147_222,
      125_962,
      129_805,
      101_208,
      67998,
      85297,
      117_332,
      101_967,
      94339,
      130_878,
      79396,
      140_312,
      147_746,
      136_975
    ]

    AdventOfCode.FuelCalculator.calculate_fuel(day_input)
  end

  def solve_day(day) do
    IO.puts("no solution for day: #{day}")
  end
end
